@page "/employee"
@using EmployeeTask.Shared.DataTrasferObject
@using Microsoft.AspNetCore.Authorization
@using System.Text.Json
@using System.Text.Json.Serialization
@inject HttpClient Http
@attribute [Authorize]
@inject HttpClient _client

<PageTitle>Employee</PageTitle>

<h1>Employee List</h1>


@if (employees == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Employee Number</th>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Temperature</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var employee in employees)
            {
                <tr>
                    <td>@employee.EmployeeNumber</td>
                    <td>@employee.FirstName</td>
                    <td>@employee.Lastname</td>
                    <td>@string.Join(", ", employee.Temperature.Select(s=> s.Temperature))</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {

    private IList<EmployeeDTO> employees;

    protected override async Task OnInitializedAsync()
    {
        var options = new JsonSerializerOptions()
            {
                PropertyNameCaseInsensitive = true,
                PropertyNamingPolicy = JsonNamingPolicy.CamelCase,
                NumberHandling = JsonNumberHandling.AllowReadingFromString                 
            };

        var request = await _client.GetFromJsonAsync<OperationResult<IList<EmployeeDTO>>>("https://localhost:7250/api/Employee/GetAll", options);

        if (request?.StatusCode == EmployeeTask.Shared.Enumerator.StatusCodeEnum.Code.Ok)
            employees = request.Entity;

    }     
}
